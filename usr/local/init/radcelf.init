#!/bin/sh

[ -e /mnt/local/sysconfig/radcelf.sh ] && source /mnt/local/sysconfig/radcelf.sh


do_insmod() {
	if [ -e /mnt/local/$1 ]; then
		KO=/mnt/local/$1
		echo loading OVERRIDE module /mnt/local/$1
	else
		KO=/usr/local/lib/modules/$1
	fi
	shift
	/sbin/insmod $KO $*	
}
do_insmod ad9512.ko
do_insmod ad9854.ko
do_insmod radcelf.ko $RADCELF_PRAMS


mkdir /dev/radcelf
ln -s /sys/bus/spi/devices/spi1.0 /dev/radcelf/ddsA
ln -s /sys/bus/spi/devices/spi1.1 /dev/radcelf/ddsB
ln -s /sys/bus/spi/devices/spi1.2 /dev/radcelf/ddsC

ln -s /sys/bus/spi/devices/spi1.3 /dev/radcelf/clkdA
ln -s /sys/bus/spi/devices/spi1.4 /dev/radcelf/clkdB

ln -s /usr/local/bin/set.radcelf /usr/local/bin/set.ddsA
ln -s /usr/local/bin/set.radcelf /usr/local/bin/set.ddsB
ln -s /usr/local/bin/set.radcelf /usr/local/bin/set.ddsC
ln -s /usr/local/bin/set.radcelf /usr/local/bin/set.clkdA
ln -s /usr/local/bin/set.radcelf /usr/local/bin/set.clkdB

get_hwmon() {
	hwmroot=/sys/class/hwmon
	hwm="$hwmroot/$(ls -l $hwmroot/ | grep $1 | awk '{ print $9 }')"
	if [ -e $hwm/in1_input ]; then
		# k414 style
		echo $hwm
	elif [ -e $hwm/device/in1_input ]; then
		# old style
		echo $hwm/device
	else
		echo >&2 "ERROR $hwm does not have in1_input"
		exit 1
	fi
}

make_aux_knobs() {
	let ai=1
	# hwmon4 has inputs 1..4
	for inp in $(get_hwmon 4-0029)/in?_input $(get_hwmon 4-0028)/in?_input
	do
		ln -s $inp /etc/acq400/$1/ai$ai
		let ai=$ai+1
	done
	# temp is already there from hwmon3 standard CELF
	ln -s $hwm/hwmon4/device/temp1_input /etc/acq400/$1/temp2
	rm /etc/acq400/$1/in?

	for dir in /dev/gpio/CELF/.direction.d?
	do
		echo in > $dir
	done
	for al in /dev/gpio/CELF/.active_lo.d?
	do
		echo 0 > $al
	done

	cat - <<EOF > /etc/acq400/2/clear_counts
#!/bin/sh
HN=\$(hostname)
caput \${HN}:0:SIG:TRG_S3:rawc64 0
caput \${HN}:0:SIG:TRG_S2:rawc64 0
caput \${HN}:0:SIG:CLK_S1:rawc64 0
caput \${HN}:0:SIG:CLK_S2:rawc64 0
caput \${HN}:0:SIG:CLK_S3:rawc64 0
caput \${HN}:0:SIG:CLK_S4:rawc64 0
caput \${HN}:0:SIG:CLK_S5:rawc64 0
EOF
	chmod a+rx /etc/acq400/2/clear_counts
}
make_site_server() {
	mkdir /etc/acq400/$1
	for file in /dev/radcelf/$2/[A-Z]* 
	do
		ln -s $file /etc/acq400/$1
	done
}

make_site_server_dds() {
	make_site_server $1 $2

	ln -s /dev/acq400.2.knobs/${2}_BPSK /etc/acq400/$1/BPSK
	ln -s /dev/acq400.2.knobs/${2}_BPSK /etc/acq400/$1/HOLD
	ln -s /dev/acq400.2.knobs/${2}_BPSK /etc/acq400/$1/FSK
	ln -s /dev/acq400.2.knobs/${2}_BPSK /etc/acq400/$1/P29

	ln -s /dev/acq400.2.knobs/${2}_OSK /etc/acq400/$1/OSK
	ln -s /dev/acq400.2.knobs/${2}_OSK /etc/acq400/$1/P30
	ln -s /dev/radcelf/$2/strobe /etc/acq400/$1/strobe
	ln -s /dev/radcelf/$2/strobe_mode /etc/acq400/$1/strobe_mode
	ln -s /proc/driver/ad9854/$2/* /etc/acq400/$1/
}

make_aux_knobs 3
make_site_server_dds 4 ddsA
make_site_server_dds 5 ddsB
make_site_server_dds 6 ddsC
make_site_server 7 clkdA
make_site_server 8 clkdB

cat - >/etc/inetd.radcelf.conf <<EOF
4244 stream tcp nowait root set.Baadd set.Baadd 4
4245 stream tcp nowait root set.Baadd set.Baadd 5
4246 stream tcp nowait root set.Baadd set.Baadd 6
EOF

inetd /etc/inetd.radcelf.conf

monitor_counters &
monitor_dds &
monitor_clkd &

if [ -e /mnt/local/RADCELF_init ]; then
	echo run override /mnt/local/RADCELF_init
	/mnt/local/RADCELF_init
	ln -s /mnt/local/RADCELF_init /etc/acq400/2/RADCELF_init
else
	/usr/local/init/RADCELF_init
	ln -s /usr/local/init/RADCELF_init /etc/acq400/2/RADCELF_init
fi

echo now hit the FPGA knobs







